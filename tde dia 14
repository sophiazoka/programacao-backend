const express = require('express');
const bodyParser = require('body-parser');

const app = express();
const PORT = 3000;

let eventos = [];

app.use(bodyParser.json());

function authenticate(req, res, next) {
    const isUserLoggedIn = true;
    if (isUserLoggedIn) {
        next();
    } else {
        res.status(401).json({ message: 'Unauthorized' });
    }
}

app.get('/v1/eventos', authenticate, (req, res) => {
    res.status(200).json(eventos);
});

app.post('/v1/evento', authenticate, (req, res) => {
    const { nome, data, descricao } = req.body;
    const novoEvento = { id: eventos.length + 1, nome, data, descricao };
    eventos.push(novoEvento);
    res.status(201).json({ message: 'Evento adicionado com sucesso', evento: novoEvento });
});

app.put('/v1/evento/:id', authenticate, (req, res) => {
    const id = parseInt(req.params.id);
    const { nome, data, descricao } = req.body;
    const index = eventos.findIndex(evento => evento.id === id);
    if (index !== -1) {
        eventos[index] = { id, nome, data, descricao };
        res.status(200).json({ message: 'Evento atualizado com sucesso', evento: eventos[index] });
    } else {
        res.status(404).json({ message: 'Evento não encontrado' });
    }
});

app.delete('/v1/evento/:id', authenticate, (req, res) => {
    const id = parseInt(req.params.id);
    const index = eventos.findIndex(evento => evento.id === id);
    if (index !== -1) {
        eventos.splice(index, 1);
        res.status(200).json({ message: 'Evento deletado com sucesso' });
    } else {
        res.status(404).json({ message: 'Evento não encontrado' });
    }
});

app.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`);
});
